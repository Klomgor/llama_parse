name: Lint

on:
  push:
    branches:
      - main
  pull_request:

env:
  UV_VERSION: "0.7.20"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      # You can use PyPy versions in python-version.
      # For example, pypy-2.7 and pypy-3.8
      matrix:
        python-version: ["3.9"]
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: ${{ github.event_name == 'pull_request' && 2 || 0 }}
      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          version: ${{ env.UV_VERSION }}

      - name: Set up Python
        run: uv python install ${{ matrix.python-version }}

      - uses: pnpm/action-setup@v4
      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version-file: "ts/llama_cloud_services/.nvmrc"
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Run linter
        shell: bash
        working-directory: py
        run: uv run -- pre-commit run -a
      # the js checks are run roundaboutly through lint-staged, and -a doesn't run it. Run them directly.
      - run: pnpm -w --filter llama-cloud-services run lint
      - run: pnpm -w --filter llama-cloud-services run format:check
